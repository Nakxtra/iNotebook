{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\inotebook\\\\src\\\\Components\\\\Notes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport NoteContext from '../Context/Notes/NoteContext';\nimport { useContext } from 'react';\nimport NotesItem from \"./NotesItem\";\nimport AddNotes from \"./AddNotes\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Notes = () => {\n  _s();\n\n  const {\n    notes,\n    getNotes,\n    editNote\n  } = useContext(NoteContext);\n  const ref = useRef(null);\n  useEffect(() => {\n    getNotes();\n  }, []);\n  const [note, setNote] = useState({\n    eId: '',\n    etitle: '',\n    edescription: '',\n    etag: ''\n  });\n\n  const handleSubmit = e => {};\n\n  const handleChange = e => {\n    console.log(e);\n    setNote({ ...note,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const updateNote = currentNote => {\n    console.log(\"hello\");\n    ref.current.click();\n    setNote(currentNote);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AddNotes, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"modal-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Popover in a modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"This \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          role: \"button\",\n          class: \"btn btn-secondary popover-test\",\n          title: \"Popover title\",\n          \"data-content\": \"Popover body content is set in this attribute.\",\n          children: \"button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), \" triggers a popover on click.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Tooltips in a modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          class: \"tooltip-test\",\n          title: \"Tooltip\",\n          children: \"This link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 6\n        }, this), \" and \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          class: \"tooltip-test\",\n          title: \"Tooltip\",\n          children: \"that link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 73\n        }, this), \" have tooltips on hover.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row my-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), notes.map(note => {\n        return /*#__PURE__*/_jsxDEV(NotesItem, {\n          updateNote: updateNote,\n          note: note\n        }, note._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 28\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Notes, \"SyRcMsUrLXm/K7kUkclmiK+ZBak=\");\n\n_c = Notes;\nexport default Notes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"sources":["D:/React/inotebook/src/Components/Notes.js"],"names":["React","useRef","NoteContext","useContext","NotesItem","AddNotes","useEffect","useState","Notes","notes","getNotes","editNote","ref","note","setNote","eId","etitle","edescription","etag","handleSubmit","e","handleChange","console","log","target","name","value","updateNote","currentNote","current","click","map","_id"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\";\r\nimport NoteContext from '../Context/Notes/NoteContext'\r\nimport { useContext } from 'react'\r\nimport NotesItem from \"./NotesItem\";\r\nimport AddNotes from \"./AddNotes\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst Notes = () => {\r\n    const { notes, getNotes, editNote } = useContext(NoteContext);\r\n    const ref = useRef(null);\r\n\r\n    useEffect(() => {\r\n        getNotes();\r\n    }, [])\r\n\r\n    const [note, setNote] = useState({ eId: '', etitle: '', edescription: '', etag: '' })\r\n\r\n    const handleSubmit = (e) => {\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        console.log(e);\r\n        setNote({ ...note, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    const updateNote = (currentNote) => {\r\n        console.log(\"hello\")\r\n        ref.current.click();\r\n        setNote(currentNote);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <AddNotes />\r\n            <div class=\"modal-body\">\r\n  <h5>Popover in a modal</h5>\r\n  <p>This <a href=\"#\" role=\"button\" class=\"btn btn-secondary popover-test\" title=\"Popover title\" data-content=\"Popover body content is set in this attribute.\">button</a> triggers a popover on click.</p>\r\n  <hr/>\r\n  <h5>Tooltips in a modal</h5>\r\n  <p><a href=\"#\" class=\"tooltip-test\" title=\"Tooltip\">This link</a> and <a href=\"#\" class=\"tooltip-test\" title=\"Tooltip\">that link</a> have tooltips on hover.</p>\r\n</div>\r\n            <div className=\"row my-3\">\r\n                <h2>Your Notes</h2>\r\n                {notes.map((note) => {\r\n                    return <NotesItem key={note._id} updateNote={updateNote} note={note} />\r\n                })}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Notes;\r\n"]},"metadata":{},"sourceType":"module"}